% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMFStrategy-class.R
\docType{class}
\name{Strategy-class}
\alias{Strategy-class}
\alias{name}
\alias{name,Strategy-method}
\alias{name<-}
\alias{name<-,Strategy,character-method}
\title{Generic Strategy Class}
\usage{
name(object, ...)

\S4method{name}{Strategy}(object, all = FALSE)

name(object, ...) <- value

\S4method{name}{Strategy,character}(object) <- value
}
\arguments{
\item{object}{an R object with a defined \code{name} method}

\item{...}{extra arguments to allow extension}

\item{all}{a logical that indicates if all the names associated with a strategy
should be returned (\code{TRUE}), or only the first (primary) one (\code{FALSE}).}

\item{value}{replacement value}
}
\description{
(e.g., \code{\linkS4class{NMFStrategy}}).

\code{name} and \code{name<-} gets and sets the name associated with an object.
In the case of \code{Strategy} objects it is the the name of the algorithm.
}
\section{Slots}{

\describe{
\item{\code{name}}{character string giving the name of the algorithm}

\item{\code{package}}{name of the package that defined the strategy.}

\item{\code{defaults}}{default values for some of the algorithm's arguments.}
}}

\keyword{internal}
\section{Methods (by generic)}{
\bold{name:}

\itemize{
\item \code{name(object = Strategy)}: Returns the name of an algorithm

\item \code{name(object = Strategy)}: Returns the name of an algorithm
}


\bold{name<-:}

\itemize{
\item \code{name<-(object = Strategy,value = character)}: Sets the name(s) of an NMF algorithm

\item \code{name<-(object = Strategy,value = character)}: Sets the name(s) of an NMF algorithm
}

}

